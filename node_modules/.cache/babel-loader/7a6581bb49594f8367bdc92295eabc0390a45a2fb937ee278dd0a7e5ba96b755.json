{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tomis\\\\OneDrive\\\\Desktop\\\\health-app\\\\src\\\\components\\\\HealthForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { fetchData } from '../api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HealthForm = () => {\n  _s();\n  const [formData, setFormData] = useState({\n    age: '',\n    height: '',\n    weight: '',\n    activityLevel: '',\n    gender: '',\n    dailyWaterIntake: '',\n    sleepHours: '',\n    stressLevel: ''\n  });\n  const handleChange = (name, value) => {\n    setFormData({\n      ...formData,\n      [name]: value\n    });\n  };\n  const handleSubmit = async () => {\n    const data = await fetchData('/predict', formData);\n    console.log('Erhaltene Daten:', data);\n    // Hier kannst du die erhaltenen Daten weiter verarbeiten oder anzeigen\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: styles.formContainer,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      style: styles.heading,\n      children: \"Health Assessment Form\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), Object.keys(formData).map(key => /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.inputGroup,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: key === 'gender' ? 'text' : 'number',\n        style: styles.input,\n        value: formData[key],\n        onChange: e => handleChange(key, e.target.value),\n        placeholder: \" \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        style: styles.label,\n        children: formatLabel(key)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 21\n      }, this)]\n    }, key, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n      style: styles.button,\n      onMouseEnter: e => e.target.style.backgroundColor = styles.buttonHover.backgroundColor,\n      onMouseLeave: e => e.target.style.backgroundColor = styles.button.backgroundColor,\n      onClick: handleSubmit,\n      children: \"Absenden\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n};\n_s(HealthForm, \"grxZCddt/ixzjDvOsUWYsTvpzQk=\");\n_c = HealthForm;\nconst formatLabel = key => {\n  switch (key) {\n    case 'age':\n      return 'Alter';\n    case 'height':\n      return 'Größe (cm)';\n    case 'weight':\n      return 'Gewicht (kg)';\n    case 'activityLevel':\n      return 'Aktivitätslevel';\n    case 'gender':\n      return 'Geschlecht';\n    case 'dailyWaterIntake':\n      return 'Tägliche Wasseraufnahme (Gläser)';\n    case 'sleepHours':\n      return 'Schlafstunden';\n    case 'stressLevel':\n      return 'Stresslevel (1-10)';\n    default:\n      return key;\n  }\n};\nconst styles = {\n  formContainer: {\n    maxWidth: '600px',\n    margin: '50px auto',\n    padding: '40px',\n    borderRadius: '16px',\n    boxShadow: '0 15px 40px rgba(0, 0, 0, 0.15)',\n    backgroundColor: '#ffffff',\n    transition: 'transform 0.3s ease-in-out',\n    transform: 'scale(1)',\n    hover: {\n      transform: 'scale(1.02)'\n    }\n  },\n  heading: {\n    textAlign: 'center',\n    marginBottom: '40px',\n    fontSize: '36px',\n    color: '#007BFF',\n    textTransform: 'uppercase',\n    letterSpacing: '2px',\n    fontWeight: '800',\n    fontFamily: \"'Roboto', sans-serif\",\n    background: 'linear-gradient(90deg, #007BFF 0%, #00C6FF 100%)',\n    WebkitBackgroundClip: 'text',\n    WebkitTextFillColor: 'transparent',\n    display: 'inline-block',\n    animation: 'fadeIn 1.5s ease-in-out'\n  },\n  inputGroup: {\n    position: 'relative',\n    marginBottom: '40px'\n  },\n  input: {\n    width: '100%',\n    padding: '15px 20px',\n    borderRadius: '8px',\n    border: '1px solid #ddd',\n    fontSize: '18px',\n    boxSizing: 'border-box',\n    transition: 'border-color 0.3s, box-shadow 0.3s',\n    outline: 'none',\n    background: 'rgba(255, 255, 255, 0.95)',\n    boxShadow: 'inset 0 0 5px rgba(0, 0, 0, 0.1)'\n  },\n  inputFocus: {\n    borderColor: '#007BFF',\n    boxShadow: '0 0 10px rgba(0, 123, 255, 0.5)'\n  },\n  label: {\n    position: 'absolute',\n    top: '-10px',\n    left: '20px',\n    backgroundColor: '#ffffff',\n    padding: '0 5px',\n    fontSize: '16px',\n    color: '#666',\n    pointerEvents: 'none',\n    transition: '0.3s ease all'\n  },\n  button: {\n    width: '100%',\n    padding: '15px',\n    borderRadius: '50px',\n    border: 'none',\n    backgroundColor: '#007BFF',\n    color: '#fff',\n    fontSize: '20px',\n    cursor: 'pointer',\n    textTransform: 'uppercase',\n    fontWeight: 'bold',\n    letterSpacing: '1.5px',\n    transition: 'background-color 0.4s, transform 0.3s ease-in-out',\n    boxShadow: '0 5px 15px rgba(0, 123, 255, 0.3)'\n  },\n  buttonHover: {\n    backgroundColor: '#0056b3'\n  }\n};\nexport default HealthForm;\nvar _c;\n$RefreshReg$(_c, \"HealthForm\");","map":{"version":3,"names":["React","useState","fetchData","jsxDEV","_jsxDEV","HealthForm","_s","formData","setFormData","age","height","weight","activityLevel","gender","dailyWaterIntake","sleepHours","stressLevel","handleChange","name","value","handleSubmit","data","console","log","style","styles","formContainer","children","heading","fileName","_jsxFileName","lineNumber","columnNumber","Object","keys","map","key","inputGroup","type","input","onChange","e","target","placeholder","label","formatLabel","button","onMouseEnter","backgroundColor","buttonHover","onMouseLeave","onClick","_c","maxWidth","margin","padding","borderRadius","boxShadow","transition","transform","hover","textAlign","marginBottom","fontSize","color","textTransform","letterSpacing","fontWeight","fontFamily","background","WebkitBackgroundClip","WebkitTextFillColor","display","animation","position","width","border","boxSizing","outline","inputFocus","borderColor","top","left","pointerEvents","cursor","$RefreshReg$"],"sources":["C:/Users/tomis/OneDrive/Desktop/health-app/src/components/HealthForm.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { fetchData } from '../api';\r\n\r\nconst HealthForm = () => {\r\n    const [formData, setFormData] = useState({\r\n        age: '',\r\n        height: '',\r\n        weight: '',\r\n        activityLevel: '',\r\n        gender: '',\r\n        dailyWaterIntake: '',\r\n        sleepHours: '',\r\n        stressLevel: '',\r\n    });\r\n\r\n    const handleChange = (name, value) => {\r\n        setFormData({\r\n            ...formData,\r\n            [name]: value\r\n        });\r\n    };\r\n\r\n    const handleSubmit = async () => {\r\n        const data = await fetchData('/predict', formData);\r\n        console.log('Erhaltene Daten:', data);\r\n        // Hier kannst du die erhaltenen Daten weiter verarbeiten oder anzeigen\r\n    };\r\n\r\n    return (\r\n        <div style={styles.formContainer}>\r\n            <h2 style={styles.heading}>Health Assessment Form</h2>\r\n\r\n            {Object.keys(formData).map((key) => (\r\n                <div key={key} style={styles.inputGroup}>\r\n                    <input\r\n                        type={key === 'gender' ? 'text' : 'number'}\r\n                        style={styles.input}\r\n                        value={formData[key]}\r\n                        onChange={e => handleChange(key, e.target.value)}\r\n                        placeholder=\" \"\r\n                    />\r\n                    <label style={styles.label}>{formatLabel(key)}</label>\r\n                </div>\r\n            ))}\r\n\r\n            <button\r\n                style={styles.button}\r\n                onMouseEnter={(e) => e.target.style.backgroundColor = styles.buttonHover.backgroundColor}\r\n                onMouseLeave={(e) => e.target.style.backgroundColor = styles.button.backgroundColor}\r\n                onClick={handleSubmit}\r\n            >\r\n                Absenden\r\n            </button>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst formatLabel = (key) => {\r\n    switch (key) {\r\n        case 'age':\r\n            return 'Alter';\r\n        case 'height':\r\n            return 'Größe (cm)';\r\n        case 'weight':\r\n            return 'Gewicht (kg)';\r\n        case 'activityLevel':\r\n            return 'Aktivitätslevel';\r\n        case 'gender':\r\n            return 'Geschlecht';\r\n        case 'dailyWaterIntake':\r\n            return 'Tägliche Wasseraufnahme (Gläser)';\r\n        case 'sleepHours':\r\n            return 'Schlafstunden';\r\n        case 'stressLevel':\r\n            return 'Stresslevel (1-10)';\r\n        default:\r\n            return key;\r\n    }\r\n};\r\n\r\nconst styles = {\r\n    formContainer: {\r\n        maxWidth: '600px',\r\n        margin: '50px auto',\r\n        padding: '40px',\r\n        borderRadius: '16px',\r\n        boxShadow: '0 15px 40px rgba(0, 0, 0, 0.15)',\r\n        backgroundColor: '#ffffff',\r\n        transition: 'transform 0.3s ease-in-out',\r\n        transform: 'scale(1)',\r\n        hover: {\r\n            transform: 'scale(1.02)',\r\n        },\r\n    },\r\n    heading: {\r\n        textAlign: 'center',\r\n        marginBottom: '40px',\r\n        fontSize: '36px',\r\n        color: '#007BFF',\r\n        textTransform: 'uppercase',\r\n        letterSpacing: '2px',\r\n        fontWeight: '800',\r\n        fontFamily: \"'Roboto', sans-serif\",\r\n        background: 'linear-gradient(90deg, #007BFF 0%, #00C6FF 100%)',\r\n        WebkitBackgroundClip: 'text',\r\n        WebkitTextFillColor: 'transparent',\r\n        display: 'inline-block',\r\n        animation: 'fadeIn 1.5s ease-in-out',\r\n    },\r\n    inputGroup: {\r\n        position: 'relative',\r\n        marginBottom: '40px',\r\n    },\r\n    input: {\r\n        width: '100%',\r\n        padding: '15px 20px',\r\n        borderRadius: '8px',\r\n        border: '1px solid #ddd',\r\n        fontSize: '18px',\r\n        boxSizing: 'border-box',\r\n        transition: 'border-color 0.3s, box-shadow 0.3s',\r\n        outline: 'none',\r\n        background: 'rgba(255, 255, 255, 0.95)',\r\n        boxShadow: 'inset 0 0 5px rgba(0, 0, 0, 0.1)',\r\n    },\r\n    inputFocus: {\r\n        borderColor: '#007BFF',\r\n        boxShadow: '0 0 10px rgba(0, 123, 255, 0.5)',\r\n    },\r\n    label: {\r\n        position: 'absolute',\r\n        top: '-10px',\r\n        left: '20px',\r\n        backgroundColor: '#ffffff',\r\n        padding: '0 5px',\r\n        fontSize: '16px',\r\n        color: '#666',\r\n        pointerEvents: 'none',\r\n        transition: '0.3s ease all',\r\n    },\r\n    button: {\r\n        width: '100%',\r\n        padding: '15px',\r\n        borderRadius: '50px',\r\n        border: 'none',\r\n        backgroundColor: '#007BFF',\r\n        color: '#fff',\r\n        fontSize: '20px',\r\n        cursor: 'pointer',\r\n        textTransform: 'uppercase',\r\n        fontWeight: 'bold',\r\n        letterSpacing: '1.5px',\r\n        transition: 'background-color 0.4s, transform 0.3s ease-in-out',\r\n        boxShadow: '0 5px 15px rgba(0, 123, 255, 0.3)',\r\n    },\r\n    buttonHover: {\r\n        backgroundColor: '#0056b3',\r\n    }\r\n};\r\n\r\nexport default HealthForm;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,SAAS,QAAQ,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnC,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC;IACrCQ,GAAG,EAAE,EAAE;IACPC,MAAM,EAAE,EAAE;IACVC,MAAM,EAAE,EAAE;IACVC,aAAa,EAAE,EAAE;IACjBC,MAAM,EAAE,EAAE;IACVC,gBAAgB,EAAE,EAAE;IACpBC,UAAU,EAAE,EAAE;IACdC,WAAW,EAAE;EACjB,CAAC,CAAC;EAEF,MAAMC,YAAY,GAAGA,CAACC,IAAI,EAAEC,KAAK,KAAK;IAClCX,WAAW,CAAC;MACR,GAAGD,QAAQ;MACX,CAACW,IAAI,GAAGC;IACZ,CAAC,CAAC;EACN,CAAC;EAED,MAAMC,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC7B,MAAMC,IAAI,GAAG,MAAMnB,SAAS,CAAC,UAAU,EAAEK,QAAQ,CAAC;IAClDe,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEF,IAAI,CAAC;IACrC;EACJ,CAAC;EAED,oBACIjB,OAAA;IAAKoB,KAAK,EAAEC,MAAM,CAACC,aAAc;IAAAC,QAAA,gBAC7BvB,OAAA;MAAIoB,KAAK,EAAEC,MAAM,CAACG,OAAQ;MAAAD,QAAA,EAAC;IAAsB;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAErDC,MAAM,CAACC,IAAI,CAAC3B,QAAQ,CAAC,CAAC4B,GAAG,CAAEC,GAAG,iBAC3BhC,OAAA;MAAeoB,KAAK,EAAEC,MAAM,CAACY,UAAW;MAAAV,QAAA,gBACpCvB,OAAA;QACIkC,IAAI,EAAEF,GAAG,KAAK,QAAQ,GAAG,MAAM,GAAG,QAAS;QAC3CZ,KAAK,EAAEC,MAAM,CAACc,KAAM;QACpBpB,KAAK,EAAEZ,QAAQ,CAAC6B,GAAG,CAAE;QACrBI,QAAQ,EAAEC,CAAC,IAAIxB,YAAY,CAACmB,GAAG,EAAEK,CAAC,CAACC,MAAM,CAACvB,KAAK,CAAE;QACjDwB,WAAW,EAAC;MAAG;QAAAd,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClB,CAAC,eACF5B,OAAA;QAAOoB,KAAK,EAAEC,MAAM,CAACmB,KAAM;QAAAjB,QAAA,EAAEkB,WAAW,CAACT,GAAG;MAAC;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA,GARhDI,GAAG;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OASR,CACR,CAAC,eAEF5B,OAAA;MACIoB,KAAK,EAAEC,MAAM,CAACqB,MAAO;MACrBC,YAAY,EAAGN,CAAC,IAAKA,CAAC,CAACC,MAAM,CAAClB,KAAK,CAACwB,eAAe,GAAGvB,MAAM,CAACwB,WAAW,CAACD,eAAgB;MACzFE,YAAY,EAAGT,CAAC,IAAKA,CAAC,CAACC,MAAM,CAAClB,KAAK,CAACwB,eAAe,GAAGvB,MAAM,CAACqB,MAAM,CAACE,eAAgB;MACpFG,OAAO,EAAE/B,YAAa;MAAAO,QAAA,EACzB;IAED;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACR,CAAC;AAEd,CAAC;AAAC1B,EAAA,CApDID,UAAU;AAAA+C,EAAA,GAAV/C,UAAU;AAsDhB,MAAMwC,WAAW,GAAIT,GAAG,IAAK;EACzB,QAAQA,GAAG;IACP,KAAK,KAAK;MACN,OAAO,OAAO;IAClB,KAAK,QAAQ;MACT,OAAO,YAAY;IACvB,KAAK,QAAQ;MACT,OAAO,cAAc;IACzB,KAAK,eAAe;MAChB,OAAO,iBAAiB;IAC5B,KAAK,QAAQ;MACT,OAAO,YAAY;IACvB,KAAK,kBAAkB;MACnB,OAAO,kCAAkC;IAC7C,KAAK,YAAY;MACb,OAAO,eAAe;IAC1B,KAAK,aAAa;MACd,OAAO,oBAAoB;IAC/B;MACI,OAAOA,GAAG;EAClB;AACJ,CAAC;AAED,MAAMX,MAAM,GAAG;EACXC,aAAa,EAAE;IACX2B,QAAQ,EAAE,OAAO;IACjBC,MAAM,EAAE,WAAW;IACnBC,OAAO,EAAE,MAAM;IACfC,YAAY,EAAE,MAAM;IACpBC,SAAS,EAAE,iCAAiC;IAC5CT,eAAe,EAAE,SAAS;IAC1BU,UAAU,EAAE,4BAA4B;IACxCC,SAAS,EAAE,UAAU;IACrBC,KAAK,EAAE;MACHD,SAAS,EAAE;IACf;EACJ,CAAC;EACD/B,OAAO,EAAE;IACLiC,SAAS,EAAE,QAAQ;IACnBC,YAAY,EAAE,MAAM;IACpBC,QAAQ,EAAE,MAAM;IAChBC,KAAK,EAAE,SAAS;IAChBC,aAAa,EAAE,WAAW;IAC1BC,aAAa,EAAE,KAAK;IACpBC,UAAU,EAAE,KAAK;IACjBC,UAAU,EAAE,sBAAsB;IAClCC,UAAU,EAAE,kDAAkD;IAC9DC,oBAAoB,EAAE,MAAM;IAC5BC,mBAAmB,EAAE,aAAa;IAClCC,OAAO,EAAE,cAAc;IACvBC,SAAS,EAAE;EACf,CAAC;EACDpC,UAAU,EAAE;IACRqC,QAAQ,EAAE,UAAU;IACpBZ,YAAY,EAAE;EAClB,CAAC;EACDvB,KAAK,EAAE;IACHoC,KAAK,EAAE,MAAM;IACbpB,OAAO,EAAE,WAAW;IACpBC,YAAY,EAAE,KAAK;IACnBoB,MAAM,EAAE,gBAAgB;IACxBb,QAAQ,EAAE,MAAM;IAChBc,SAAS,EAAE,YAAY;IACvBnB,UAAU,EAAE,oCAAoC;IAChDoB,OAAO,EAAE,MAAM;IACfT,UAAU,EAAE,2BAA2B;IACvCZ,SAAS,EAAE;EACf,CAAC;EACDsB,UAAU,EAAE;IACRC,WAAW,EAAE,SAAS;IACtBvB,SAAS,EAAE;EACf,CAAC;EACDb,KAAK,EAAE;IACH8B,QAAQ,EAAE,UAAU;IACpBO,GAAG,EAAE,OAAO;IACZC,IAAI,EAAE,MAAM;IACZlC,eAAe,EAAE,SAAS;IAC1BO,OAAO,EAAE,OAAO;IAChBQ,QAAQ,EAAE,MAAM;IAChBC,KAAK,EAAE,MAAM;IACbmB,aAAa,EAAE,MAAM;IACrBzB,UAAU,EAAE;EAChB,CAAC;EACDZ,MAAM,EAAE;IACJ6B,KAAK,EAAE,MAAM;IACbpB,OAAO,EAAE,MAAM;IACfC,YAAY,EAAE,MAAM;IACpBoB,MAAM,EAAE,MAAM;IACd5B,eAAe,EAAE,SAAS;IAC1BgB,KAAK,EAAE,MAAM;IACbD,QAAQ,EAAE,MAAM;IAChBqB,MAAM,EAAE,SAAS;IACjBnB,aAAa,EAAE,WAAW;IAC1BE,UAAU,EAAE,MAAM;IAClBD,aAAa,EAAE,OAAO;IACtBR,UAAU,EAAE,mDAAmD;IAC/DD,SAAS,EAAE;EACf,CAAC;EACDR,WAAW,EAAE;IACTD,eAAe,EAAE;EACrB;AACJ,CAAC;AAED,eAAe3C,UAAU;AAAC,IAAA+C,EAAA;AAAAiC,YAAA,CAAAjC,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}